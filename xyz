import json
import xml.etree.ElementTree as ET

def handle_db_check(config):
    db_check = DBCheck(config)
    db_check.connect()

    if db_check.cur is None:
        print(f"Skipping db ({config.get('db_type')}) due to failed connection")
        return

    generate_report = config.get("generate_report", False)

    queries = config.get("queries", [])
    if not isinstance(queries, list):
        print("Invalid queries format. Skipping.")
        return

    results = []

    for query_cfg in queries:
        query = query_cfg.get("query")
        count = query_cfg.get("count")
        if query:
            output = db_check.run_query(query)
            result = db_check.compare.compare_and_print(output, count)
            results.append({
                "query": query,
                "count": count,
                "output": output,
                "result": result
            })

    if generate_report:
        # Generate XML Report
        root = ET.Element("DBCheckReport")
        for res in results:
            item = ET.SubElement(root, "QueryResult")
            ET.SubElement(item, "query").text = res["query"]
            ET.SubElement(item, "count").text = str(res["count"])
            ET.SubElement(item, "output").text = str(res["output"])
            ET.SubElement(item, "result").text = res["result"]
        tree = ET.ElementTree(root)
        tree.write("report.xml")
        print("XML report generated: report.xml")
    else:
        # Generate JSON Report
        with open("report.json", "w") as f:
            json.dump(results, f, indent=4)
        print("JSON report generated: report.json")
