import yaml
from cerberus import Validator
from schema_template import schema

def load_yaml(file_path):
    with open(file_path, 'r') as stream:
        try:
            return yaml.safe_load(stream)
        except yaml.YAMLError as e:
            raise ValueError(f"Invalid YAML file: {e}")

def validate_yaml(data):
    validator = Validator(schema)
    if isinstance(data, list):
        for idx, item in enumerate(data):
            if not validator.validate(item):
                raise ValueError(f"Validation error in item {idx + 1}:\n{validator.errors}")
    elif isinstance(data, dict):
        if not validator.validate(data):
            raise ValueError(f"Validation error:\n{validator.errors}")
    else:
        raise ValueError("YAML data must be a list or dict")
    print("âœ… config.yaml is valid according to the schema.")

if __name__ == '__main__':
    yaml_data = load_yaml("config.yaml")
    validate_yaml(yaml_data)

